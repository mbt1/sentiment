name: Deploy Python App to Azure Functions

on:
  push:
    branches:
      - main  # replace with your default branch if not 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12' 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: ./backend

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Convert XML to JSON and Sanitize
      run: |
        $xmlContent = [xml]$env:AZURE_PUBLISH_PROFILE
        $jsonObject = @{}
    
        function Convert-XmlNodeToJson ($node) {
            $childJson = @{}
            foreach ($childNode in $node.ChildNodes) {
            if ($childNode.NodeType -eq 'Element') {
                $childJson[$childNode.Name] = Convert-XmlNodeToJson $childNode
            }
            }
            if ($node.HasAttributes) {
            foreach ($attribute in $node.Attributes) {
                $childJson["_$($attribute.Name)"] = "0"
            }
            }
            if ($node.HasChildNodes -eq $false) {
            return "0"
            }
            return $childJson
        }
    
        $jsonObject = Convert-XmlNodeToJson $xmlContent.DocumentElement
        $jsonString = $jsonObject | ConvertTo-Json -Depth 100
    
        Write-Host "Sanitized JSON:"
        Write-Host $jsonString
      shell: pwsh
      env:
        AZURE_PUBLISH_PROFILE: ${{ secrets.AZURE_PUBLISH_PROFILE }}
      

    - name: Deploy to Azure Functions
      uses: azure/functions-action@v1.5.1
      with:
        app-name: sentimentabot
        package: ./backend
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}


# Run the following commands in an Azure Cloud Shell terminal to get the values for the two secrets
# az account set --subscription DemoAndPortfolioProjects
# $resourceGroupId = az group show --name "Sentimentabot" --query "id" --output tsv
# az ad sp create-for-rbac --name "your-service-principal-name" --role contributor --scopes $resourceGroupId --sdk-auth
# az webapp deployment list-publishing-profiles --name sentimentabot --resource-group Sentimentabot --query "[?publishMethod=='MSDeploy'].{profileName:profileName,publishUrl:publishUrl,userName:userName,userPWD:userPWD}" --output json
# az webapp deployment list-publishing-profiles --name sentimentabot --resource-group Sentimentabot --subscription DemoAndPortfolioProjects

